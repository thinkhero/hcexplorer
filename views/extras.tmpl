{{define "html-head"}}
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="hcexplorer web">
    <meta name="author" content="hcexplorer">
    <!--  Custom favicon  -->
    <link rel="apple-touch-icon" sizes="180x180" href="/images/favicon/apple-touch-icon.png">
    <link rel="icon" href="/images/favicon/favicon.ico">
    <link rel="icon" type="image/png" href="/images/favicon/favicon-32x32.png" sizes="32x32">
    <link rel="icon" type="image/png" href="/images/favicon/favicon-16x16.png" sizes="16x16">
    <link rel="manifest" href="/images/favicon/manifest.json">
    <link rel="mask-icon" href="/images/favicon/safari-pinned-tab.svg">
    <link rel="shortcut icon" href="/images/favicon/favicon.ico">
    <meta name="apple-mobile-web-app-title" content="HcashOrg - decentralized credit">
    <meta name="application-name" content="HcashOrg - decentralized credit">
    <meta name="msapplication-TileColor" content="#2973ff">
    <meta name="msapplication-TileImage" content="/images/favicon/mstile-144x144.png">
    <meta name="msapplication-config" content="/images/favicon/browserconfig.xml">
    <meta name="turbolinks-cache-control" content="no-cache">
    <title>{{.}}</title>
    <link href="/css/bootstrap.css" rel="stylesheet">
    <link href="/css/main.css" rel="stylesheet">
    <!-- <link rel="stylesheet/less" type="text/css" href="/css/dynamic.less"> -->
    <script src="/js/messagesocket.js"></script>
    <script src="/js/humanize.js"></script>
    <script src="/js/turbolinks.js"></script>
    <script src="/js/jquery.js"></script>
    <script src="/js/echarts.common.min.js"></script>
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>
{{end}}

{{define "navbar"}}
<div class="menubtn">
	<span class="icon"><i></i><i></i><i></i></span>
	<span class="name">Close menu</span>
</div>
<div class="top-nav2">
	<div class="h-logo clearfix">
		<a href="https://h.cash/" class="h-logo2">
			<img class="no-underline" src="https://h.cash/themes/en/images/logo5.png" ></img>
		</a>
	</div>
	<div class="h-nav3">
		<a href="https://h.cash/#section2" title="Explorer">Exchange Platform</a>
		<a href="https://h.cash/#section3" title="What is Hcash">What is Hcash</a>
		<a href="https://h.cash/#section4" title="Hcash X Hyper Exchange">Hcash X Hyper Exchange</a>
		<a href="https://h.cash/#section5" title="Roadmap">Roadmap</a>
		<a href="https://h.cash/#section6" title="Team">Team</a>
		<a href="https://h.cash/#section7" title="Contact">Contact</a>
		<a href="http://explorer.h.cash" title="Explorer">HSR Explorer</a>
	</div>
	<div class="h-btns clearfix">
		<div class="swapbtnbox"><a href="https://h.cash/comesoon" class="swapbtn btn-style4 btn-middle btn"><span>Swap HSR to HC</span><span class="icon_1"><img src="https://h.cash/themes/en/images/doublearrow.png"></span></a></div>
		<div class="clearfix">
			<div class="downloadapp clearfix">
				<a class="btn-style1 btn-middle btn"><span>Download Wallet</span> <span class="icon"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 45 45"> <path fill-rule="evenodd" stroke-width="1px" stroke="rgb(255, 255, 255)" fill-opacity="0" fill="rgb(8, 163, 208)" d="M22.500,3.500 C32.993,3.500 41.500,12.006 41.500,22.500 C41.500,32.993 32.993,41.500 22.500,41.500 C12.007,41.500 3.500,32.993 3.500,22.500 C3.500,12.006 12.007,3.500 22.500,3.500 Z"></path> <path fill-rule="evenodd" fill="rgb(255, 255, 255)" d="M30.251,22.660 C30.592,22.333 30.592,21.790 30.251,21.451 C29.921,21.123 29.373,21.123 29.044,21.451 L22.863,27.584 L22.863,14.346 C22.863,13.873 22.485,13.498 22.009,13.498 C21.534,13.498 21.144,13.873 21.144,14.346 L21.144,27.584 L14.974,21.451 C14.633,21.123 14.084,21.123 13.756,21.451 C13.414,21.790 13.414,22.333 13.756,22.660 L21.399,30.245 C21.729,30.584 22.277,30.584 22.606,30.245 L30.251,22.660 Z"></path> </svg></span></a>
				<ul class="clearfix">
					<li><a target="_blank" href="https://github.com/HcashOrg/hcGUI/releases/download/R2.0.0/HcGui.Setup.2.0.0-osx.dmg" class="btn-style1 btn-small btn">for Mac OSX 2.0.0</a></li>
					<li><a target="_blank" href="https://github.com/HcashOrg/hcGUI/releases/download/R2.0.0/HcGui.Setup.2.0.0-x64.exe" class="btn-style1 btn-small btn">for Windows 2.0.0</a></li>
					<li><a target="_blank" href="/app_down" class="btn-style1 btn-small btn">for App wallet</a></li>
					<li><a target="_blank" href="https://www.hyperpay.tech/download" class="btn-style1 btn-small btn">for Hyperpay wallet</a></li>
				</ul>
			</div>
		</div>
		<div class="yellowpaper clearfix">
			<a href="https://h.cash/themes/en/images/HCASH-YellowPaper-1.0.pdf" download="HCASH-YellowPaper-1.0.pdf">
				<div class="icon"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 17 27"> <path fill-rule="evenodd" fill="rgb(255, 255, 255)" d="M16.564,26.999 L0.873,26.999 C0.798,26.998 0.724,26.975 0.660,26.935 C0.542,27.007 0.397,27.019 0.270,26.966 C0.048,26.876 -0.058,26.623 0.033,26.402 L0.840,24.389 L0.033,22.375 C-0.008,22.270 -0.008,22.155 0.033,22.051 L0.840,20.037 L0.033,18.022 C-0.008,17.918 -0.008,17.803 0.033,17.699 L0.840,15.683 L0.033,13.667 C-0.008,13.564 -0.008,13.448 0.033,13.343 L0.840,11.328 L0.033,9.312 C-0.008,9.208 -0.008,9.092 0.033,8.988 L0.840,6.974 L0.033,4.956 C-0.008,4.853 -0.008,4.737 0.033,4.633 L0.840,2.614 L0.033,0.595 C0.032,0.595 0.032,0.595 0.032,0.595 C-0.057,0.372 0.052,0.119 0.276,0.029 C0.401,-0.018 0.541,-0.005 0.655,0.066 C0.721,0.023 0.796,0.000 0.873,-0.002 L16.564,-0.002 C16.805,-0.002 17.000,0.194 17.000,0.433 L17.000,26.564 C17.000,26.804 16.805,26.999 16.564,26.999 ZM16.128,0.870 L1.081,0.870 L1.714,2.453 C1.755,2.557 1.755,2.671 1.714,2.776 L0.907,4.794 L1.714,6.812 C1.755,6.916 1.755,7.031 1.714,7.135 L0.907,9.151 L1.714,11.167 C1.755,11.271 1.755,11.387 1.714,11.490 L0.907,13.506 L1.714,15.522 C1.755,15.625 1.755,15.741 1.714,15.846 L0.907,17.861 L1.714,19.875 C1.755,19.979 1.755,20.094 1.714,20.199 L0.907,22.212 L1.714,24.228 C1.755,24.332 1.755,24.447 1.714,24.551 L1.082,26.128 L16.128,26.128 L16.128,0.870 ZM3.924,11.321 L13.513,11.321 C13.754,11.321 13.949,11.516 13.949,11.757 C13.949,11.998 13.754,12.193 13.513,12.193 L3.924,12.193 C3.684,12.193 3.488,11.998 3.488,11.757 C3.488,11.516 3.684,11.321 3.924,11.321 ZM3.924,13.063 L13.513,13.063 C13.754,13.063 13.949,13.259 13.949,13.499 C13.949,13.739 13.754,13.934 13.513,13.934 L3.924,13.934 C3.684,13.934 3.488,13.739 3.488,13.499 C3.488,13.259 3.684,13.063 3.924,13.063 ZM3.924,14.805 L13.513,14.805 C13.754,14.805 13.949,15.001 13.949,15.241 C13.949,15.481 13.754,15.677 13.513,15.677 L3.924,15.677 C3.684,15.677 3.488,15.481 3.488,15.241 C3.488,15.001 3.684,14.805 3.924,14.805 Z"></path> </svg></div>
				<div class="name">Yellow Paper</div>
				<div class="size">Download</div>
			</a>
		</div>
		<div class="whitepaper clearfix">
			<a href="https://h.cash/themes/en/images/Hcash+Whitepaper+V0.8.5.pdf" download="Hcash+Whitepaper+V0.8.5.pdf">
				<div class="icon"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 17 27"> <path fill-rule="evenodd" fill="rgb(255, 255, 255)" d="M16.564,26.999 L0.873,26.999 C0.798,26.998 0.724,26.975 0.660,26.935 C0.542,27.007 0.397,27.019 0.270,26.966 C0.048,26.876 -0.058,26.623 0.033,26.402 L0.840,24.389 L0.033,22.375 C-0.008,22.270 -0.008,22.155 0.033,22.051 L0.840,20.037 L0.033,18.022 C-0.008,17.918 -0.008,17.803 0.033,17.699 L0.840,15.683 L0.033,13.667 C-0.008,13.564 -0.008,13.448 0.033,13.343 L0.840,11.328 L0.033,9.312 C-0.008,9.208 -0.008,9.092 0.033,8.988 L0.840,6.974 L0.033,4.956 C-0.008,4.853 -0.008,4.737 0.033,4.633 L0.840,2.614 L0.033,0.595 C0.032,0.595 0.032,0.595 0.032,0.595 C-0.057,0.372 0.052,0.119 0.276,0.029 C0.401,-0.018 0.541,-0.005 0.655,0.066 C0.721,0.023 0.796,0.000 0.873,-0.002 L16.564,-0.002 C16.805,-0.002 17.000,0.194 17.000,0.433 L17.000,26.564 C17.000,26.804 16.805,26.999 16.564,26.999 ZM16.128,0.870 L1.081,0.870 L1.714,2.453 C1.755,2.557 1.755,2.671 1.714,2.776 L0.907,4.794 L1.714,6.812 C1.755,6.916 1.755,7.031 1.714,7.135 L0.907,9.151 L1.714,11.167 C1.755,11.271 1.755,11.387 1.714,11.490 L0.907,13.506 L1.714,15.522 C1.755,15.625 1.755,15.741 1.714,15.846 L0.907,17.861 L1.714,19.875 C1.755,19.979 1.755,20.094 1.714,20.199 L0.907,22.212 L1.714,24.228 C1.755,24.332 1.755,24.447 1.714,24.551 L1.082,26.128 L16.128,26.128 L16.128,0.870 ZM3.924,11.321 L13.513,11.321 C13.754,11.321 13.949,11.516 13.949,11.757 C13.949,11.998 13.754,12.193 13.513,12.193 L3.924,12.193 C3.684,12.193 3.488,11.998 3.488,11.757 C3.488,11.516 3.684,11.321 3.924,11.321 ZM3.924,13.063 L13.513,13.063 C13.754,13.063 13.949,13.259 13.949,13.499 C13.949,13.739 13.754,13.934 13.513,13.934 L3.924,13.934 C3.684,13.934 3.488,13.739 3.488,13.499 C3.488,13.259 3.684,13.063 3.924,13.063 ZM3.924,14.805 L13.513,14.805 C13.754,14.805 13.949,15.001 13.949,15.241 C13.949,15.481 13.754,15.677 13.513,15.677 L3.924,15.677 C3.684,15.677 3.488,15.481 3.488,15.241 C3.488,15.001 3.684,14.805 3.924,14.805 Z"></path> </svg></div>
				<div class="name">White Paper</div>
				<div class="size">Download</div>
			</a>
		</div>
	</div>
</div>
<div class="top-nav">
    <div class="container">
        <div class="d-flex align-items-center flex-wrap">
            <div class="d-flex align-items-center">
                <div class="col-sm-auto" style="padding: 0 2px">
                    <a href="https://h.cash/">
                        <img class="no-underline" style="width:40px;height:40px;"  src="/images/icon.ico" ></img>
                    </a>
                </div>
                <div class="col-sm-auto nav3">
					<a href="/" title="Explorer">Home</a>
					<a href="/explorer" title="Explorer">Block</a>
					<!-- <a href="/explorer" title="Explorer">Network</a> -->
					<!-- <a href="/explorer" title="Explorer">Movement</a> -->
					<!-- <a href="/explorer" title="Explorer">Explore</a> -->
				</div>
            </div>
            <div class="col" style="padding: 0 5px;">
                <form class="navbar-form" role="search" id="search-form">
                    <div class="input-group">

                        <input
                            autofocus
                            type="text"
                            name="search"
                            id="search"
                            class="form-control top-search"
                            placeholder="Search for blocks, addresses or transactions"
                        />
                    </div>
                </form>
            </div>
            <div>
                <a id="sun-toggle" href="javascript:toggleSun()" class="hcicon-sun-fill no-underline"></a>
            </div>
        </div>
    </div>
</div>
<script data-turbolinks-eval="false">
    document.getElementById('search').onkeypress = function(e){
        if (!e) e = window.event;
        var keyCode = e.keyCode || e.which;
        if (keyCode == '13'){
            window.location.href = "/explorer/search/" + this.value
            return false;
        }
    }
    function setCookie(cname, cvalue, exMins) {
        var d = new Date();
        d.setTime(d.getTime() + (exMins*60*1000));
        var expires = "expires="+d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }
    var sunToggle = document.getElementById("sun-toggle")
    var darkBGCookieName = 'hcdataDarkBG';
    function darkEnabled() {
        return document.cookie.includes(darkBGCookieName)
    }
    if (darkEnabled()) {
        toggleToDarkClasses(document.body)
    } else {
        toggleToLightClasses(document.body)
    }
    function toggleToDarkClasses(body) {
        $(sunToggle).removeClass('hcicon-sun-fill')
        $(sunToggle).addClass('hcicon-sun-stroke')
        $(body).addClass('darkBG')
    }
    function toggleToLightClasses(body) {
        $(body).removeClass('darkBG');
        $(sunToggle).removeClass('hcicon-sun-stroke')
        $(sunToggle).addClass('hcicon-sun-fill')
    }
    function toggleSun() {
        if (darkEnabled()) {
            setCookie(darkBGCookieName, '', 0)
            toggleToLightClasses(document.body)
        } else {
            setCookie(darkBGCookieName, 1, 525600)
            toggleToDarkClasses(document.body)
        }
    }
    document.addEventListener("turbolinks:before-render", function(event) {
        if (darkEnabled()) {
            toggleToDarkClasses(event.data.newBody)
        } else {
            toggleToLightClasses(event.data.newBody)
        }
    })


    function updateConnectionStatus(msg, connected) {
        var el = $('#connection');
        el.removeClass('hidden')
        if (connected) {
            el.addClass('connected')
            el.removeClass('disconnected')
        } else {
            el.removeClass('connected');
            el.addClass('disconnected');
        }
        el.html(msg + '<div></div>')
    }



    function getSocketURI(loc) {
        var protocol = (loc.protocol === 'https:') ? 'wss' : 'ws'
        var route = (loc.pathname === "/") ? "/ws" : loc.pathname + '/ws'
        return protocol + "://" + loc.host + route
    }

    var ws; // websocket global
    function createWebSocket(loc) {
        var uri = getSocketURI(loc)
        ws = new MessageSocket(uri);
        console.log("createdWebSocket", uri, ws)
        ws.registerEvtHandler("open", function() {
            console.log('Connected')
            updateConnectionStatus('Connected', true);
        });

        ws.registerEvtHandler("close", function() {
            console.log('Disconnected')
            updateConnectionStatus('Disconnected', false);
        });

        ws.registerEvtHandler("error", function(evt) {
            console.log("WebSocket error:", evt);
            updateConnectionStatus('Disconnected', false);
        });

        ws.registerEvtHandler("ping", function(evt) {
            console.log("ping. users online: ", evt)
            //ws.send("pong", "copy")
        });
        ws.registerEvtHandler("decodetxResp", function(evt) {
            console.log("Got message: ", evt);
            $("#decode_header").text("Decoded tx");
            $("#decoded_tx").text(evt);
        })
        ws.registerEvtHandler("sendtxResp", function(evt) {
            console.log("Got message: ", evt);
            $("#decode_header").text("Sent tx");
            $("#decoded_tx").text(evt);
        })
        var updateBlockData = function (event) {
            console.log("Received newblock message", event);
            var newBlock = JSON.parse(event);
            var confirms = $('[data-confirmation-block-height]');
            $.each(confirms, function(i, v) {
                if (isNaN($(v).text())) {
                    $(v).text("0");
                }
                $(v).text(
                    newBlock.block.height - $(v).data('confirmation-block-height')
                )
            })
            // block summary data
            var b = newBlock.block;
            var expTableRows = $('#explorertable tbody tr');
            //var CurrentHeight = parseInt($('#explorertable tbody tr td').first().text());
            if (expTableRows){
                expTableRows.last().remove()
                var newRow = '<tr id="' + b.height + '">' +
                    '<td><a href="/explorer/block/' + b.height + '" class="fs18">' + b.height + '</a></td>' +
                    '<td>' + b.tx + '</td>' +
                    '<td>' + b.votes + '</td>' +
                    '<td>' + b.tickets + '</td>' +
                    '<td>' + b.revocations + '</td>' +
                    '<td>' + humanize.bytes(b.size) + '</td>' +
                    '<td data-age=' + b.time + '>' + humanize.timeSince(b.time) + '</td>' +
                    '<td>' + b.formatted_time + '</td>' +
                '</tr>'
                var newRowHtml = $.parseHTML(newRow)
                $(newRowHtml).insertBefore(expTableRows.first())
                setTimeElements()
            }
            if ($("#bsubsidy_total").text() !== "") {
                $("#bsubsidy_total").html(humanize.decimalParts(b.next_block_subsidy.total/100000000, false, 8))
                $("#bsubsidy_pow").html(humanize.decimalParts(b.next_block_subsidy.pow/100000000, false, 8))
                $("#bsubsidy_pos").html(humanize.decimalParts((b.next_block_subsidy.pos/500000000), false, 8))
                $("#bsubsidy_dev").html(humanize.decimalParts(b.next_block_subsidy.developer/100000000, false, 8))
                $("#coin_supply").html(humanize.decimalParts(b.coin_supply/100000000, true, 8))
                $("#blocksdiff").html(humanize.decimalParts(b.sdiff, false, 8))
                $("#window_block_index").text(newBlock.stake.window_block_index)
                $("#pos-window-progess-bar").css({ width: (newBlock.stake.window_block_index/144)*100 + "%" })
            }
        };
        ws.registerEvtHandler("newblock", updateBlockData);

        var updateMempool = function (event) {
            console.log("Received mempoolsstxfeeinfo message", event);
            var m = JSON.parse(event);

            //mempool fee info
            $('#mempoolfeeinfo_number').text(m.number)
        };
        ws.registerEvtHandler("mempoolsstxfeeinfo", updateMempool);
    }
    function manageWebSocket(loc) {
        var pathRoot = loc.pathname.split('/')[1];
        var socketPathRoot = ws.ws.url.split(loc.host)[1].split("/")[1]
        if (pathRoot == socketPathRoot) {
            return
        }
        // reconnect to correct socket url
        console.log("roots mismatch, reconnecting", pathRoot, socketPathRoot)
        ws.close()
        createWebSocket(loc)
    }
</script>

<script>
    if (!ws) {
        createWebSocket(window.location)
    } else {
        manageWebSocket(window.location)
    }
</script>
{{end}}

{{define "footer"}}
<footer class="navbar-fixed-bottom">
    <div class="container wrapper text-center">
        <a class="nav-item" href="https://github.com/HcashOrg/hcexplorer" title="hcexplorer on GitHub" target="_blank">GitHub</a>

        <a class="nav-item" href="/explorer/decodetx" title="Decode or send a raw transaction">Decode Tx</a>
        <a class="nav-item" href="/api/status" title="API Status" target="_blank" data-turbolinks="false">Status</a>
        <span data-turbolinks-permanent class="nav-item hidden" id="connection">Connecting to WebSocket...<div></div></span>
    </div>
</footer>
<script data-turbolinks-eval="false">
    var ages, hiddenAges;
    function setTimeElements() {
        ages = $('[data-age]');
    }
    function updateAges() {
        $.each(ages, function(i, age) {
            var unixTime = $(age).data('age');
            if (unixTime > 0) {
                $(age).text(
                    humanize.timeSince(unixTime)
                )
            }
        })
    }
    document.addEventListener("turbolinks:load", function(){
        setTimeElements()
        updateAges()
    })
    setInterval(updateAges, 10000);
</script>
<script>
$(function(){
	$('.top-nav .menubtn').bind('click', function(){
		if($(this).hasClass('active')){
			$(this).removeClass('active');
			$('.top-nav .nav3').hide();
		}
		else {
			$(this).addClass('active');
			$('.top-nav .nav3').show();
		}
	});
	
	$('.menubtn').bind('click', function(){
		if($(this).hasClass('active')){
			$(this).removeClass('active');
			$('.top-nav2').removeClass('active');
		}
		else {
			$(this).addClass('active');
			$('.top-nav2').addClass('active');
		}
	});
	
	$('.downloadapp > a').bind('click', function(){
		if($(this).parent().hasClass('active')){
			$(this).parent().removeClass('active');
			$(this).next().hide();
		}
		else {
			$(this).parent().addClass('active');
			$(this).next().show();
		}
	});
	
	
    $('.scriptDataStar').on('click',function(){
        $(this).next('.scriptData').slideToggle();
    });

      $.ajax({
              url: "/explorer/chartlist",
              data:{},
              type: "GET",
              dataType:'json',
              success:function(result){
                 var globals =result;
 var richListCount = echarts.init(document.getElementById('richListCount'));
                    var richListSum = echarts.init(document.getElementById('richListSum'));

                    // 指定图表的配置项和数据
                    var option1= {
                        tooltip : {
                            trigger: 'axis',
                            formatter: '<table style="text-align: right">' +
                                '<tr><td colspan="3" style="text-align: center">{b0}</td></tr>' +
                                '<tr><td>{a0}&nbsp;:&nbsp;</td><td style="text-align: left"> {c0}</td></tr>' +
                                '<tr><td>{a1}&nbsp;:&nbsp;</td><td style="text-align: left"> {c1} %</td></tr></table>'
                        },
                        toolbox: {
                            show : false
                        },
                        calculable : true,
                        legend: {
                            data:['',''],
                        },
                        xAxis : {
                                type : 'category',
                                data : globals.balance_dist,
                                axisLine: {            // 坐标轴线
                                    show: true,        // 默认显示，属性show控制显示与否
                                    lineStyle: {       // 属性lineStyle控制线条样式
                                        color: '#AAA',
                                        width: 1,
                                    }
                                },
                                axisLabel:{
                                    textStyle:{
                                        color:'#AAA',
                                        fontSize:'12px',
                                    }
                                },
                                axisTick:{
                                    show: true,
                                    lineStyle: {
                                        color: '#DDDDDD',
                                        width: 1,
                                    }
                                },
                                splitLine:{
                                    lineStyle: {       // 属性lineStyle控制线条样式
                                        color: '#DDD',
                                        width: 1,
                                    }
                                }
                                
                            },
                        yAxis : [
                            {
                                type : 'value',
                                name : 'Count',
                                axisLine: {            // 坐标轴线
                                    show: true,        // 默认显示，属性show控制显示与否
                                    lineStyle: {       // 属性lineStyle控制线条样式
                                        color: '#AAA',
                                        width: 1,
                                    }
                                },
                                axisLabel : {
                                    formatter: '{value}',
                                    textStyle:{
                                        color:'#AAA',
                                        fontSize:'12px',
                                    }
                                },
                                axisTick:{
                                    show: true,
                                    lineStyle: {
                                        color: '#DDDDDD',
                                        width: 1,
                                    }
                                },
                                splitLine:{
                                    lineStyle: {       // 属性lineStyle控制线条样式
                                        color: '#DDD',
                                        width: 1,

                                    }
                                }

                            },
                            {
                                type : 'value',
                                name : 'Percent',
                                axisLine: {            // 坐标轴线
                                    show: true,        // 默认显示，属性show控制显示与否
                                    lineStyle: {       // 属性lineStyle控制线条样式
                                        color: '#AAA',
                                        width: 1,
                                    }
                                },
                                axisLabel : {
                                    formatter: '{value} %',
                                    textStyle:{
                                        color:'#AAA',
                                        fontSize:'12px',
                                    }
                                },
                                splitLine:{
                                    lineStyle: {       // 属性lineStyle控制线条样式
                                        color: '#DDD',
                                        width: 1,
                                        type:'dashed',
                                    }
                                }
                            }
                        ],
                        series : [{
                                name:'Count',
                                type:'bar',
                                data:globals.count_list,
                                itemStyle:{
                                    normal:{
                                        color:'#529BD7'
                                    },

                                }
                            },
                            {
                                name:'Percent',
                                type:'line',
                                yAxisIndex: 1,
                                data:globals.count_percent,
                                itemStyle:{
                                    normal:{
                                        color:'#7799bb',
                                        lineStyle: {
                                            color: '#AAA',
                                            width: 2
                                        },
                                    }

                                }
                            }
                        ]
                    };


                    var option2= {
                        tooltip : {
                            trigger: 'axis',
                            formatter: '<table style="text-align: right">' +
                            '<tr><td colspan="3" style="text-align: center">{b0}</td></tr>' +
                            '<tr><td>{a0}&nbsp;:&nbsp;</td><td style="text-align: left"> {c0}</td></tr>' +
                            '<tr><td>{a1}&nbsp;:&nbsp;</td><td style="text-align: left"> {c1} %</td></tr></table>'
                        },
                        toolbox: {
                            show : false
                        },
                        calculable : true,
                        legend: {
                            data:['','']
                        },
                        xAxis : [
                            {
                                type : 'category',
                                data : globals.balance_dist,
                                axisLine: {            // 坐标轴线
                                    show: true,        // 默认显示，属性show控制显示与否
                                    lineStyle: {       // 属性lineStyle控制线条样式
                                        color: '#AAA',
                                        width: 1,
                                    }
                                },
                                axisLabel:{
                                    textStyle:{
                                        color:'#AAA',
                                        fontSize:'12px',
                                    }
                                },
                                axisTick:{
                                    show: true,
                                    lineStyle: {
                                        color: '#DDDDDD',
                                        width: 1,
                                    }
                                },
                                splitLine:{
                                    lineStyle: {       // 属性lineStyle控制线条样式
                                        color: '#DDD',
                                        width: 1,
                                    }
                                }

                            }
                        ],
                        yAxis : [
                            {
                                type : 'value',
                                name : 'HC',
                                axisLine: {            // 坐标轴线
                                    show: true,        // 默认显示，属性show控制显示与否
                                    lineStyle: {       // 属性lineStyle控制线条样式
                                        color: '#AAA',
                                        width: 1,
                                    }
                                },
                                axisLabel : {
                                    formatter: '{value}',
                                    textStyle:{
                                        color:'#AAA',
                                        fontSize:'12px',
                                    }
                                },
                                axisTick:{
                                    show: true,
                                    lineStyle: {
                                        color: '#DDDDDD',
                                        width: 1,
                                    }
                                },
                                splitLine:{
                                    lineStyle: {       // 属性lineStyle控制线条样式
                                        color: '#DDD',
                                        width: 1,

                                    }
                                }

                            },
                            {
                                type : 'value',
                                name : 'Percent',
                                axisLine: {            // 坐标轴线
                                    show: true,        // 默认显示，属性show控制显示与否
                                    lineStyle: {       // 属性lineStyle控制线条样式
                                        color: '#AAA',
                                        width: 1,
                                    }
                                },
                                axisLabel : {
                                    formatter: '{value} %',
                                    textStyle:{
                                        color:'#AAA',
                                        fontSize:'12px',
                                    }
                                },
                                splitLine:{
                                    lineStyle: {       // 属性lineStyle控制线条样式
                                        color: '#DDD',
                                        width: 1,
                                        type:'dashed',
                                    }
                                }
                            }
                        ],
                        series : [
                            {
                                name:'HC',
                                type:'bar',
                                data:globals.sum_list,
                                itemStyle:{
                                    normal:{
                                        color:'#529BD7'
                                    },

                                }
                            },
                            {
                                name:'Percent',
                                type:'line',
                                yAxisIndex: 1,
                                data:globals.sum_percent,
                                itemStyle:{
                                    normal:{
                                        color:'#7799bb',
                                        lineStyle: {
                                            color: '#AAA',
                                            width: 2
                                        },
                                    }

                                }
                            }
                        ]
                    };
                    // 使用刚指定的配置项和数据显示图表。
                    richListCount.setOption(option1);
                    richListSum.setOption(option2);
              },
              error:function(er){
                //console.log(er)
                console.log(er)
              }}
            );
        // Average blocksize 
        $.ajax({
            url: "/explorer/blocksizejson",
            data:{},
            type: "GET",
            dataType:'json',
            success:function(result){
                var globals =result;
                console.log(globals)
                console.log(globals['Date'])
                console.log(globals.Date)
                var chart1 = echarts.init(document.getElementById('chart1'));
                var chart2 = echarts.init(document.getElementById('chart2'));
                var chart3 = echarts.init(document.getElementById('chart3'));
                // 指定图表的配置项和数据
                var option1 = {
                    title: {
                        text: '',
                        x:'center'
                    },
                    // tooltip: {
                    //     trigger: 'axis',
                    //     formatter: function (params) {
                    //         var tipText = params[0].date + ':&nbsp;</td><td>' + params[0].value + '</td></tr>' +
                    //                 '</table>';
                    //         return tipText;
                    //     }
                    // },
                    tooltip : {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'cross',
                            label: {
                                backgroundColor: '#6a7985'
                            }
                        }
                    },
                    // legend: {
                    //     data:['blocksize']
                    // },
                    grid: {
                        y: 20,
                        x2: 0,
                        y2: 20
                    },
                    xAxis: {
                        data: globals['Date'],
                        // type:"date"
                        axisLine: {            // 坐标轴线
                            show: true,        // 默认显示，属性show控制显示与否
                            lineStyle: {       // 属性lineStyle控制线条样式
                                color: '#AAAAAA',
                                width: 1,
                            }
                        },
                        axisTick:{
                            show: true,
                            lineStyle: {
                                color: '#DDDDDD',
                                width: 1,
                            }
                        },
                        axisLabel:{
                            margin:6,
                            textStyle:{
                                color:'#888888',
                                fontSize:'12px',
                            }
                        },
                        splitLine:{
                            lineStyle: {       // 属性lineStyle控制线条样式
                                color: '#DDDDDD',
                                width: 1,
                            }
                        }
                    },
                    yAxis: {
                        type : 'value',
                        axisLine: {            // 坐标轴线
                            lineStyle: {       // 属性lineStyle控制线条样式
                                color: '#AAAAAA',
                                width: 1,
                            }
                        },
                        axisTick:{
                            show: true,
                            lineStyle: {
                                color: '#DDDDDD',
                                width: 1,
                            }
                        },
                        axisLabel:{
                            margin:7,
                            textStyle:{
                                color:'#888888',
                                fontSize:'12px',
                            }
                        },
                        splitLine:{
                            lineStyle: {       // 属性lineStyle控制线条样式
                                color: '#DDDDDD',
                                width: 1,
                            }
                        }
                    },
                   
                    series: [{
                        name: 'average of blocksize',
                        type: 'line',
                        data: globals['AvgSize'],
                        itemStyle:{
                            normal:{
                                color:'#7799bb',
                                lineStyle:{
                                    color:'#7799bb',
                                    width:2
                                },
                            },

                        }
                    }],
                };
                var option2 = {
                    title: {
                        text: '',
                        x:'center'
                    },
                    // tooltip: {
                    //     trigger: 'axis',
                    //     formatter: function (params) {
                    //         var tipText = params[0].date + ':&nbsp;</td><td>' + params[0].value + '</td></tr>' +
                    //                 '</table>';
                    //         return tipText;
                    //     }
                    // },
                    tooltip : {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'cross',
                            label: {
                                backgroundColor: '#6a7985'
                            }
                        }
                    },
                    // legend: {
                    //     data:['blocksize']
                    // },
                    grid: {
                        y: 20,
                        x2: 0,
                        y2: 20
                    },
                    xAxis: {
                        data: globals['Date'],
                        title:"total blocksize oneday",
                        axisLine: {            // 坐标轴线
                            show: true,        // 默认显示，属性show控制显示与否
                            lineStyle: {       // 属性lineStyle控制线条样式
                                color: '#AAAAAA',
                                width: 1,
                            }
                        },
                        axisTick:{
                            show: true,
                            lineStyle: {
                                color: '#DDDDDD',
                                width: 1,
                            }
                        },
                        axisLabel:{
                            margin:6,
                            textStyle:{
                                color:'#888888',
                                fontSize:'12px',
                            }
                        },
                        splitLine:{
                            lineStyle: {       // 属性lineStyle控制线条样式
                                color: '#DDDDDD',
                                width: 1,
                            }
                        }
                    },
                    yAxis: {
                        type : 'value',
                        axisLine: {            // 坐标轴线
                            lineStyle: {       // 属性lineStyle控制线条样式
                                color: '#AAAAAA',
                                width: 1,
                            }
                        },
                        axisTick:{
                            show: true,
                            lineStyle: {
                                color: '#DDDDDD',
                                width: 1,
                            }
                        },
                        axisLabel:{
                            margin:7,
                            textStyle:{
                                color:'#888888',
                                fontSize:'12px',
                            }
                        },
                        splitLine:{
                            lineStyle: {       // 属性lineStyle控制线条样式
                                color: '#DDDDDD',
                                width: 1,
                            }
                        }
                    },
                   
                    series: [{
                        name: 'total transaction',
                        type: 'line',
                        data: globals['totalsize'],
                        itemStyle:{
                            normal:{
                                color:'#7799bb',
                                lineStyle:{
                                    color:'#7799bb',
                                    width:2
                                },
                            },

                        }
                    }],
                };
                var option3 = {
                    title: {
                        text: '',
                        x:'center'
                    },
                    // tooltip: {
                    //     trigger: 'axis',
                    //     formatter: function (params) {
                    //         var tipText = params[0].date + ':&nbsp;</td><td>' + params[0].value + '</td></tr>' +
                    //                 '</table>';
                    //         return tipText;
                    //     }
                    // },
                    tooltip : {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'cross',
                            label: {
                                backgroundColor: '#6a7985'
                            }
                        }
                    },
                    // legend: {
                    //     data:['blocksize']
                    // },
                    grid: {
                        y: 20,
                        x2: 0,
                        y2: 20
                    },
                    xAxis: {
                        data: globals['Date'],
                        // type:"date"
                        axisLine: {            // 坐标轴线
                            show: true,        // 默认显示，属性show控制显示与否
                            lineStyle: {       // 属性lineStyle控制线条样式
                                color: '#AAAAAA',
                                width: 1,
                            }
                        },
                        axisTick:{
                            show: true,
                            lineStyle: {
                                color: '#DDDDDD',
                                width: 1,
                            }
                        },
                        axisLabel:{
                            margin:6,
                            textStyle:{
                                color:'#888888',
                                fontSize:'12px',
                            }
                        },
                        splitLine:{
                            lineStyle: {       // 属性lineStyle控制线条样式
                                color: '#DDDDDD',
                                width: 1,
                            }
                        }
                    },
                    yAxis: {
                        type : 'value',
                        axisLine: {            // 坐标轴线
                            lineStyle: {       // 属性lineStyle控制线条样式
                                color: '#AAAAAA',
                                width: 1,
                            }
                        },
                        axisTick:{
                            show: true,
                            lineStyle: {
                                color: '#DDDDDD',
                                width: 1,
                            }
                        },
                        axisLabel:{
                            margin:7,
                            textStyle:{
                                color:'#888888',
                                fontSize:'12px',
                            }
                        },
                        splitLine:{
                            lineStyle: {       // 属性lineStyle控制线条样式
                                color: '#DDDDDD',
                                width: 1,
                            }
                        }
                    },
                   
                    series: [{
                        name: 'total transaction',
                        type: 'line',
                        data: globals['TotalTx'],
                        itemStyle:{
                            normal:{
                                color:'#7799bb',
                                lineStyle:{
                                    color:'#7799bb',
                                    width:2
                                },
                            },

                        }
                    }],
                };
                
                chart1.setOption(option1);
                chart2.setOption(option2);
                chart3.setOption(option3);
                echarts.connect([chart1, chart2, chart3]);
            },
            error:function(err){
                alert(err)
            }
        })


});
</script>
{{end}}

{{define "decimalParts"}}<span class="int">{{ index . 0 }}</span><span class="dot">.</span><span class="decimal">{{ index . 1 }}<span class="trailing-zeroes">{{ index . 2 }}</span></span>{{end}}
